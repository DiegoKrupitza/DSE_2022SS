version: '3.7'

services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-service
    ports:
      - '8761:8761'
    restart: unless-stopped
    networks:
      - eureka-network

  gateway:
    container_name: gateway
    build:
      context: ./gateway
    ports:
      - '8080:8080'
    environment:
      - EUREKA_SERVER_ADDRESS=eureka-server
    restart: unless-stopped
    depends_on:
      - eureka-server
    networks:
      - eureka-network

  simulator-service:
    container_name: simulator-service
    build:
      context: ./simulator-service
    ports:
      - '8081:8081'
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_SERVER_ADDRESS=eureka-server
    depends_on:
      - eureka-server
      - rabbitmq
    networks:
      - eureka-network

  tracking-service:
    container_name: tracking-service
    build:
      context: ./tracking-service
    ports:
      - '8888:8888'
    environment:
      - EUREKA_SERVER_ADDRESS=eureka-server
      - MONGO_DB_HOST=mongo
      - MONGO_DB_NAME=trackingService_db
      - MONGO_DB_USER=trackingService_user
      - MONGO_DB_PWD=12345
    depends_on:
      - eureka-server
      - rabbitmq
    networks:
      - eureka-network
      - mongo-network

  rabbitmq:
    container_name: rabbitmq
    image: 'rabbitmq:management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    restart: unless-stopped

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: root-db
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - mongo-network

networks:
  eureka-network:
  mongo-network:
